double median(vector<int>& a, vector<int>& b) 
{
	int length1=a.size();
	int length2=b.size();
	int low=0;
	if(length1>length2)
	 return median(b,a);
	// int high=(length1<=length2)?length1:length2; 
	//This condition won't work because you are using  r1,r2, l1, l2 according to it
	int high=length1;
	int middle=(length1+length2+1)/2;
    while(low<=high)
	{
         int mid1=low+(high-low)/2;
		 int mid2=middle-mid1;
		 int l1=INT_MIN, l2=INT_MIN;
		 int r1=INT_MAX, r2=INT_MAX;
		 if(mid1<length1)
		  r1=a[mid1];
		 if(mid2<length2)
		  r2=b[mid2];
		 if(mid1>=1)
		  l1=a[mid1-1];
		 if(mid2>=1)
		  l2=b[mid2-1];
		 if(l1<=r2 && l2<=r1)
		 {
			 if((length1+length2)%2!=0)
			  return max(l1,l2);
			 else
			  return ((double)(max(l1,l2)+min(r1,r2))/2.0); 
		 } 
		 else if(l1>r2)
		  high=mid1-1;
		 else
		  low=mid1+1;    
	}
	return 0;
}
