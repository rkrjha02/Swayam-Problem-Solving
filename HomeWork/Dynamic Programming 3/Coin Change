class Solution {
public:
    // MEMOISATION (TOP DOWN APPROACH)
    // int minCoins(vector<int> &coins, int amount, int index, vector<vector<int>> &dp){
    //     if(index==0){
    //         if(amount%coins[index]==0)
    //          return (amount/coins[index]);
    //         else
    //          return 1e9;
    //     }
    //     if(dp[index][amount]!=-1)
    //         return dp[index][amount];
    //     int notake=0+minCoins(coins,amount,index-1,dp);
    //     int take=INT_MAX;
    //     if(amount>=coins[index]){
    //         take=1+minCoins(coins,amount-coins[index],index,dp);
    //     }
    //     return dp[index][amount]=min(notake,take);
    // }
    
    // TABULATION (BOTTOM UP APPROACH)
    // int coinChange(vector<int>& coins, int amount) {
    //     int n=coins.size();
    //     vector<vector<int>> dp(n,vector<int>(amount+1,0));
    //     for(int i=0;i<=amount;i++){
    //         if(i%coins[0]==0)
    //             dp[0][i]=(i/coins[0]);
    //         else
    //             dp[0][i]=1e9;
    //     }
    //     for(int index=1;index<n;index++){
    //         for(int paisa=1;paisa<=amount;paisa++){
    //             int notake=0+dp[index-1][paisa];
    //             int take=INT_MAX;
    //             if(paisa>=coins[index]){
    //                take=1+dp[index][paisa-coins[index]];
    //             }
    //             dp[index][paisa]=min(notake,take);
    //         }
    //     }
    //     int ans=dp[n-1][amount];
    //     if(ans>=1e9)
    //       return -1;
    //     return ans;
    // }
    
    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<int> prev(amount+1,0);
        vector<int> curr(amount+1,0);
        for(int i=0;i<=amount;i++){
            if(i%coins[0]==0)
                prev[i]=(i/coins[0]);
            else
                prev[i]=1e9;
        }
        for(int index=1;index<n;index++){
            for(int paisa=1;paisa<=amount;paisa++){
                int notake=0+prev[paisa];
                int take=INT_MAX;
                if(paisa>=coins[index]){
                   take=1+curr[paisa-coins[index]];
                }
                curr[paisa]=min(notake,take);
            }
            prev=curr;
        }
        int ans=prev[amount];
        if(ans>=1e9)
          return -1;
        return ans;
    }
};
