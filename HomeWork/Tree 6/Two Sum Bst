/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool inorderTraversal(TreeNode *root, unordered_map<int,int> &umap, int k)
    {
       if(root==nullptr)
        return false;
       if(inorderTraversal(root->left,umap,k))
        return true;
       if(umap.find(root->val)!=umap.end())
         return true;
       else
         umap[k-(root->val)]=1;
       if(inorderTraversal(root->right,umap,k))
        return true;
       return false;      
    }
    bool findTarget(TreeNode* root, int k) 
    {
       unordered_map<int,int> umap;
       if(inorderTraversal(root,umap,k))
         return true;
       return false;  
    }
};
