class Solution {
public:
    // MEMOISATION
    // int maxrob(vector<int> &nums, int index, vector<int> &dp)
    // {
    //     if(index<0)
    //      return 0;
    //     if(index==0)
    //      return nums[0];
    //     if(dp[index]!=-1)
    //      return dp[index]; 
    //     int notake=0+maxrob(nums, index-1, dp);
    //     int take=nums[index]+maxrob(nums, index-2, dp);
    //     return dp[index]=max(notake,take); 
    // }
    int rob(vector<int>& nums) 
    {
    //   Tabulation
    //    vector<int> dp(nums.size(),0);
    //    dp[0]=nums[0];
    //    for(int index=1;index<nums.size();index++)
    //    {
    //      int notake=0+dp[index-1];
    //      int take=nums[index];
    //      if(index>1)
    //       take+=dp[index-2];
    //      dp[index]=max(notake,take);
    //    }
    //    return dp[nums.size()-1];

       int prev2=0, prev1=0;
       prev1=nums[0];
       int curr=0;
       for(int index=1;index<nums.size();index++)
       {
         int notake=0+prev1;
         int take=nums[index];
         if(index>1)
          take+=prev2;
         curr=max(notake,take);
         prev2=prev1;
         prev1=curr;
       }
       return prev1;
    }
};
