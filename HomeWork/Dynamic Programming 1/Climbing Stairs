class Solution {
public:
    // MEMOISATION
    // int totalWays(int index, vector<int> &dp){
    //     if(index<0)
    //         return 0;
    //     if(index==0)
    //         return 1;
    //     if(dp[index]!=-1)
    //         return dp[index];
    //     return dp[index]=totalWays(index-1,dp)+totalWays(index-2,dp);
    // }
    
    // TABULATION
    // int climbStairs(int n) {
    //     vector<int> dp(n+1,0);
    //     dp[0]=1;
    //     dp[1]=1;
    //     for(int index=2;index<=n;index++){
    //         dp[index]=dp[index-1]+dp[index-2];
    //     }
    //     return dp[n];
    // }
    
    int climbStairs(int n){
        int prev1=1,prev2=1,curr;
        for(int index=2;index<=n;index++){
            curr=prev1+prev2;
            prev2=prev1;
            prev1=curr;
        }
        return prev1;
    }
};
