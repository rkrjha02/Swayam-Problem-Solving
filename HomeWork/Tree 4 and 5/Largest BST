class Solution{
    public:
    struct tree{
        bool isBst;
        int max;
        int min;
        int size;
        tree(bool isBst, int max, int min, int size)
        {
            this->isBst=isBst;
            this->max=max;
            this->min=min;
            this->size=size;
        }
    };
    tree maxSize(Node *root, int &answer)
    {
        if(root==nullptr)
         return tree(true,INT_MIN, INT_MAX, 0);
        tree left=maxSize(root->left, answer);
        tree right=maxSize(root->right, answer);
        if(!left.isBst || !right.isBst)
          return tree(false, INT_MIN, INT_MAX, 0);
        if(root->data<=left.max || root->data>=right.min)
         return tree(false, max(right.min, left.max), min(left.max, right.min), 0);
        int size=left.size+right.size+1;
        answer=max(answer,size);
        return tree(true, max(root->data, right.max), min(root->data, left.min),size);
    }
    int largestBst(Node *root)
    {
       int answer=0;
       maxSize(root,answer);
       return answer;
    }
};
